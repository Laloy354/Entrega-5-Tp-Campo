// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(Entrega5Context))]
    [Migration("20240127153818_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Afiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaDeAgremiacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroAgremiado")
                        .HasColumnType("integer");

                    b.Property<int>("TipoResponsableIVAId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoResponsableIVAId");

                    b.ToTable("Afiliado");
                });

            modelBuilder.Entity("Data.Models.Cobranza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AfiliadoId")
                        .HasColumnType("integer");

                    b.Property<int>("FacturaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("MontoTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AfiliadoId");

                    b.HasIndex("FacturaId");

                    b.ToTable("Cobranza");
                });

            modelBuilder.Entity("Data.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AfiliadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("ImporteTotal")
                        .HasColumnType("real");

                    b.Property<int>("NumeroComprobante")
                        .HasColumnType("integer");

                    b.Property<float>("SubTotal")
                        .HasColumnType("real");

                    b.Property<int>("TipoMedioPagoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AfiliadoId");

                    b.HasIndex("TipoMedioPagoId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Data.Models.FacturaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("FacturaId")
                        .HasColumnType("integer");

                    b.Property<int>("InsumoId")
                        .HasColumnType("integer");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.HasIndex("InsumoId");

                    b.ToTable("FacturaDetalle");
                });

            modelBuilder.Entity("Data.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MarcaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Insumo");
                });

            modelBuilder.Entity("Data.Models.ListaPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TipoCondicionDeVentaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoCondicionDeVentaId");

                    b.ToTable("ListaPrecio");
                });

            modelBuilder.Entity("Data.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Data.Models.Precio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InsumoId")
                        .HasColumnType("integer");

                    b.Property<int>("ListaPrecioId")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("ListaPrecioId");

                    b.ToTable("Precio");
                });

            modelBuilder.Entity("Data.Models.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CobranzaId")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoTarjetaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CobranzaId");

                    b.HasIndex("TipoTarjetaId");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("Data.Models.TipoCondicionDeVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoCondicionDeVenta");
                });

            modelBuilder.Entity("Data.Models.TipoMedioPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoMedioPago");
                });

            modelBuilder.Entity("Data.Models.TipoResponsableIVA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoResponsableIVA");
                });

            modelBuilder.Entity("Data.Models.TipoTarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoTarjeta");
                });

            modelBuilder.Entity("Data.Models.Transferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCobranza")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<int>("MontoTransferencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCobranza");

                    b.ToTable("Transferencia");
                });

            modelBuilder.Entity("Data.Models.Afiliado", b =>
                {
                    b.HasOne("Data.Models.TipoResponsableIVA", "TipoResponsableIVA")
                        .WithMany()
                        .HasForeignKey("TipoResponsableIVAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoResponsableIVA");
                });

            modelBuilder.Entity("Data.Models.Cobranza", b =>
                {
                    b.HasOne("Data.Models.Afiliado", "Afiliado")
                        .WithMany()
                        .HasForeignKey("AfiliadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("Data.Models.Factura", b =>
                {
                    b.HasOne("Data.Models.Afiliado", "Afiliado")
                        .WithMany()
                        .HasForeignKey("AfiliadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.TipoMedioPago", "TipoMedioPago")
                        .WithMany()
                        .HasForeignKey("TipoMedioPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("TipoMedioPago");
                });

            modelBuilder.Entity("Data.Models.FacturaDetalle", b =>
                {
                    b.HasOne("Data.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("Data.Models.Insumo", b =>
                {
                    b.HasOne("Data.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Data.Models.ListaPrecio", b =>
                {
                    b.HasOne("Data.Models.TipoCondicionDeVenta", "TipoCondicionDeVenta")
                        .WithMany()
                        .HasForeignKey("TipoCondicionDeVentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCondicionDeVenta");
                });

            modelBuilder.Entity("Data.Models.Precio", b =>
                {
                    b.HasOne("Data.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.ListaPrecio", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("ListaPrecio");
                });

            modelBuilder.Entity("Data.Models.Tarjeta", b =>
                {
                    b.HasOne("Data.Models.Cobranza", "Cobranza")
                        .WithMany()
                        .HasForeignKey("CobranzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.TipoTarjeta", "TipoTarjeta")
                        .WithMany()
                        .HasForeignKey("TipoTarjetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cobranza");

                    b.Navigation("TipoTarjeta");
                });

            modelBuilder.Entity("Data.Models.Transferencia", b =>
                {
                    b.HasOne("Data.Models.Cobranza", "Cobranza")
                        .WithMany()
                        .HasForeignKey("IdCobranza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cobranza");
                });
#pragma warning restore 612, 618
        }
    }
}
